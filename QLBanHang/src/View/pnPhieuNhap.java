/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Controller.PhieuNhapRepository;
import Controller.QuanLyPhieuNhap;
import Model.Supplier;
import Model.Category;
import Model.Product;
import Model.Import;
import Controller.SanPhamRepository;
import Model.ImportDetail;
import java.awt.Color;
import java.awt.Window;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author TRAN MINH GIAP
 */
public class pnPhieuNhap extends javax.swing.JPanel {
    private float count = 0;
    DefaultTableModel tbm = new DefaultTableModel();
    /**
     * Creates new form pnPhieuNhap
     */
    private boolean isInitialized = false;
    public pnPhieuNhap() {
        initComponents();
        loadCategory();
        loadProduct();
        loadSupplier();
        isInitialized = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnHeaderPhieuNhap = new javax.swing.JPanel();
        lblHeaderPhieu = new javax.swing.JLabel();
        lblIDPhieu = new javax.swing.JLabel();
        lblNgayNhapPhieu = new javax.swing.JLabel();
        lblcbxSPPhieu = new javax.swing.JLabel();
        lblNCCPhieu = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDanhSachPhieu = new javax.swing.JTable();
        lblLoaiSPPhieu = new javax.swing.JLabel();
        lblTongTienPhieu = new javax.swing.JLabel();
        lblGhiChuPhieu = new javax.swing.JLabel();
        lblGiaNhapPhieu = new javax.swing.JLabel();
        pnTitleTableQLSP = new javax.swing.JPanel();
        lblTitlePhieu = new javax.swing.JLabel();
        txtIDPhieu = new javax.swing.JTextField();
        txtNgayNhapPhieu = new javax.swing.JTextField();
        txtGiaNhapPhieu = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtaGhiChuPhieu = new javax.swing.JTextArea();
        cbxSPPhieu = new javax.swing.JComboBox<>();
        cbxNCCPhieu = new javax.swing.JComboBox<>();
        cbxLoaiSPPhieu = new javax.swing.JComboBox<>();
        lblMoney = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnTaoPhieu = new javax.swing.JButton();
        btnHoanTat = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnXoaSPNhap = new javax.swing.JButton();
        lblSoLuong = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        btnSuaPhieu = new javax.swing.JButton();

        pnHeaderPhieuNhap.setBackground(new java.awt.Color(0, 153, 0));

        lblHeaderPhieu.setBackground(new java.awt.Color(255, 255, 255));
        lblHeaderPhieu.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        lblHeaderPhieu.setForeground(new java.awt.Color(255, 255, 255));
        lblHeaderPhieu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeaderPhieu.setText("Phiếu Nhập Sản Phẩm Vào Kho");

        javax.swing.GroupLayout pnHeaderPhieuNhapLayout = new javax.swing.GroupLayout(pnHeaderPhieuNhap);
        pnHeaderPhieuNhap.setLayout(pnHeaderPhieuNhapLayout);
        pnHeaderPhieuNhapLayout.setHorizontalGroup(
            pnHeaderPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHeaderPhieu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnHeaderPhieuNhapLayout.setVerticalGroup(
            pnHeaderPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnHeaderPhieuNhapLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblHeaderPhieu)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        lblIDPhieu.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblIDPhieu.setText("Mã Phiếu");

        lblNgayNhapPhieu.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblNgayNhapPhieu.setText("Ngày Nhập");

        lblcbxSPPhieu.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblcbxSPPhieu.setText("Chọn Sản Phẩm");

        lblNCCPhieu.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblNCCPhieu.setText("Nhà Cung Cấp");

        tbDanhSachPhieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sản Phẩm", "Số Lượng ", "Giá Nhập", "Tổng Tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbDanhSachPhieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDanhSachPhieuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbDanhSachPhieu);

        lblLoaiSPPhieu.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblLoaiSPPhieu.setText("Loại Sản Phẩm");

        lblTongTienPhieu.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblTongTienPhieu.setText("Tổng Tiền");

        lblGhiChuPhieu.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblGhiChuPhieu.setText("Ghi Chú");

        lblGiaNhapPhieu.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblGiaNhapPhieu.setText("Giá Nhập");

        pnTitleTableQLSP.setBackground(new java.awt.Color(0, 153, 0));

        lblTitlePhieu.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblTitlePhieu.setForeground(new java.awt.Color(255, 255, 255));
        lblTitlePhieu.setText("Danh Sách Sản Phẩm");

        javax.swing.GroupLayout pnTitleTableQLSPLayout = new javax.swing.GroupLayout(pnTitleTableQLSP);
        pnTitleTableQLSP.setLayout(pnTitleTableQLSPLayout);
        pnTitleTableQLSPLayout.setHorizontalGroup(
            pnTitleTableQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTitleTableQLSPLayout.createSequentialGroup()
                .addComponent(lblTitlePhieu)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnTitleTableQLSPLayout.setVerticalGroup(
            pnTitleTableQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTitleTableQLSPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitlePhieu)
                .addContainerGap())
        );

        txtNgayNhapPhieu.setForeground(new java.awt.Color(204, 204, 204));
        txtNgayNhapPhieu.setText("dd/mm/yyyy");
        txtNgayNhapPhieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNgayNhapPhieuMouseClicked(evt);
            }
        });
        txtNgayNhapPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgayNhapPhieuActionPerformed(evt);
            }
        });

        txtaGhiChuPhieu.setColumns(20);
        txtaGhiChuPhieu.setRows(5);
        jScrollPane2.setViewportView(txtaGhiChuPhieu);

        cbxSPPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSPPhieuActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 153, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 153, 0));

        btnTaoPhieu.setBackground(new java.awt.Color(0, 153, 0));
        btnTaoPhieu.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTaoPhieu.setForeground(new java.awt.Color(255, 255, 255));
        btnTaoPhieu.setText("Tạo Phiếu");
        btnTaoPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoPhieuActionPerformed(evt);
            }
        });

        btnHoanTat.setBackground(new java.awt.Color(0, 153, 0));
        btnHoanTat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnHoanTat.setForeground(new java.awt.Color(255, 255, 255));
        btnHoanTat.setText("Hoàn Tất");
        btnHoanTat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHoanTatActionPerformed(evt);
            }
        });

        btnHuy.setBackground(new java.awt.Color(0, 153, 0));
        btnHuy.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnHuy.setForeground(new java.awt.Color(255, 255, 255));
        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(0, 153, 0));
        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoaSPNhap.setBackground(new java.awt.Color(0, 153, 0));
        btnXoaSPNhap.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoaSPNhap.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaSPNhap.setText("Xóa");
        btnXoaSPNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSPNhapActionPerformed(evt);
            }
        });

        lblSoLuong.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblSoLuong.setText("Số Lượng");

        btnSuaPhieu.setBackground(new java.awt.Color(0, 153, 0));
        btnSuaPhieu.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSuaPhieu.setForeground(new java.awt.Color(255, 255, 255));
        btnSuaPhieu.setText("Sửa");
        btnSuaPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaPhieuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnHeaderPhieuNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addComponent(pnTitleTableQLSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblIDPhieu)
                            .addComponent(lblcbxSPPhieu)
                            .addComponent(lblNgayNhapPhieu)
                            .addComponent(lblGiaNhapPhieu)
                            .addComponent(lblGhiChuPhieu))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtGiaNhapPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIDPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayNhapPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxSPPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnHuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHoanTat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnTaoPhieu, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                        .addContainerGap(59, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSoLuong)
                                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNCCPhieu)
                                    .addComponent(cbxNCCPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblLoaiSPPhieu)
                                    .addComponent(cbxLoaiSPPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnThem)))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                    .addComponent(lblMoney, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(lblTongTienPhieu))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSuaPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnXoaSPNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(17, 17, 17))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnHeaderPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIDPhieu)
                            .addComponent(txtIDPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNgayNhapPhieu)
                            .addComponent(txtNgayNhapPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblcbxSPPhieu)
                            .addComponent(cbxSPPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnTaoPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHoanTat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGiaNhapPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGiaNhapPhieu))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnXoaSPNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSuaPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(lblGhiChuPhieu))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTongTienPhieu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblNCCPhieu)
                                .addComponent(lblSoLuong))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbxNCCPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(lblLoaiSPPhieu)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cbxLoaiSPPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(2, 2, 2)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnTitleTableQLSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        if(tbm.getRowCount() > 0){
            PhieuNhapRepository pnrp = new PhieuNhapRepository();
            for(int row = 0 ; row < tbm.getRowCount() ; row++){
                try {
                    int importID = Integer.parseInt(txtIDPhieu.getText());
                    String productID = tbDanhSachPhieu.getValueAt(row, 0).toString();
                    String num = tbDanhSachPhieu.getValueAt(row, 1).toString();
                    int num1 = Integer.parseInt(num);
                    ImportDetail ipDetail = new ImportDetail(importID, productID, num1);
                    pnrp.updateNumberProduct(ipDetail, 2, 0);
                    pnrp.deleteImportDetail(ipDetail);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Hủy phiếu không thành công !");
                    System.out.println("Lỗi hủy phiếu : " + ex.getMessage());
                }
            }
        }
        QuanLyPhieuNhap qlpn = new QuanLyPhieuNhap();
        try {
            int importID = Integer.parseInt(txtIDPhieu.getText());
            Import ip = new Import(importID);
            qlpn.deleteImport(ip);
        } catch (Exception ex) {
            System.out.println("Lỗi xóa phiểu khi hủy tạo phiếu !");
        }
        JOptionPane.showMessageDialog(this, "Hủy tạo phiếu !");
        destroy();
    }//GEN-LAST:event_btnHuyActionPerformed
    /*Hiển thị loại sản phẩm, nhà cung cấp, giá tương ứng với sản phẩm + vô hiệu hóa khi đã chọn sản phẩm*/
    private void cbxSPPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSPPhieuActionPerformed
        // TODO add your handling code here:
        if(isInitialized){
            Product pr = (Product)cbxSPPhieu.getSelectedItem();
            String idCategory = pr.getCategoryID();
            String idSupplier = pr.getSupplierID();
            for(int i = 0 ; i < cbxLoaiSPPhieu.getItemCount() ; i++){
                Category sp = cbxLoaiSPPhieu.getItemAt(i);
                if(sp.getCategoryID().equals(idCategory)){
                    cbxLoaiSPPhieu.setSelectedItem(sp);
                    cbxLoaiSPPhieu.setEnabled(false);
                }
            }
            for(int i = 0 ; i < cbxNCCPhieu.getItemCount() ; i++){
                Supplier dm = cbxNCCPhieu.getItemAt(i);
                if(dm.getSupplierID().equals(idSupplier)){
                    cbxNCCPhieu.setSelectedItem(dm);
                    cbxNCCPhieu.setEnabled(false);
                }
            }
            String nhap = String.valueOf(pr.getProductPriceIn());
            txtGiaNhapPhieu.setText(nhap);
            txtGiaNhapPhieu.setEnabled(false);
        }
    }//GEN-LAST:event_cbxSPPhieuActionPerformed
    /*Reset text + set color*/
    private void txtNgayNhapPhieuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNgayNhapPhieuMouseClicked
        // TODO add your handling code here:
        txtNgayNhapPhieu.setText("");
        txtNgayNhapPhieu.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtNgayNhapPhieuMouseClicked
    /*Không cần*/
    private void txtNgayNhapPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgayNhapPhieuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgayNhapPhieuActionPerformed
    /*vô hiệu hóa ngày nhập 1 khi đã nhập bởi nhập cũng 1 thời điểm nên ngày phải giống nhau*/
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String id = txtIDPhieu.getText();
        String day = txtNgayNhapPhieu.getText();
        Product pr = (Product)cbxSPPhieu.getSelectedItem();
        String nhap = txtGiaNhapPhieu.getText();
        String note = txtaGhiChuPhieu.getText();
        String num = txtSoLuong.getText();
        Category ct = (Category)cbxLoaiSPPhieu.getSelectedItem();
        Supplier sp = (Supplier)cbxNCCPhieu.getSelectedItem();
        if(id.equals("") || day.equals("") || nhap.equals("") || num.equals("")){
            JOptionPane.showMessageDialog(this, "PLEASE INPUT ALL INFORMATION !");
            return;
        }
        /*Xử lý ngày*/
        String[] day1 = day.split("/");
        String daySQL = day1[0] + "/" + day1[1] + "/" + day1[2];
        /*Xử Lý id Product*/
        String idpr = pr.getProductID();
        /*Lấy tên Category*/
        String ctName = ct.getCategoryName();
        /*Lấy tên Supplier*/
        String spName = sp.getSupplierName();
        try {
            int id1 = Integer.parseInt(id);
            int num1 = Integer.parseInt(num);
            float nhap1 = Float.parseFloat(nhap);
//            count += num1 * nhap1;
            System.out.println("count += " + num1 + " * " + nhap1);
            float total = num1 * nhap1;
            System.out.println("total = " + num1 + " * " + nhap1);
            if(num1 <= 0 || nhap1 <= 0){
                JOptionPane.showMessageDialog(this, "NHẬP LẠI GIÁ HOẶC SỐ LƯỢNG PHÙ HỢP !");
                return;
            }
            ImportDetail ipDetail = new ImportDetail(id1, daySQL, idpr, nhap1, note, spName, ctName, num1, total);
            PhieuNhapRepository repo = new PhieuNhapRepository();
            if(repo.addImportDetail(ipDetail)){
                JOptionPane.showMessageDialog(this, "ĐÃ THÊM SẢN PHẨM VÀO HÓA ĐƠN");
                /*cập nhật lại số lượng sản phẩm tồn kho mỗi khi nhập dựa trên chi tiết hóa đơn*/
                repo.updateNumberProduct(ipDetail,1,0);
//              loadChiTietHoaDon();
                loadChiTietHoaDonPresent();
//                String money = String.valueOf(count) + "VNĐ";
//                lblMoney.setText(money);
                payMoney();
                /*NHAP CUNG THOI DIEM NEN VO HIEU HOA TRUONG NGAY NHAP*/
                txtNgayNhapPhieu.setEnabled(false);
            }
            else{
                JOptionPane.showMessageDialog(this, "LỖI, KHÔNG THỂ THÊM SẢN PHẨM VÀO HÓA ĐƠN");
            }
            resetText();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "VALIDATE Price ! " + ex.getMessage());
        }
    }//GEN-LAST:event_btnThemActionPerformed
    /*Hiển thị id + vô hiệu hóa btn Tạo Phiếu*/
    private void btnTaoPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoPhieuActionPerformed
        // TODO add your handling code here:
        txtIDPhieu.setForeground(Color.BLACK);
        btnTaoPhieu.setEnabled(false);
    }//GEN-LAST:event_btnTaoPhieuActionPerformed

    private void btnHoanTatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHoanTatActionPerformed
        // TODO add your handling code here:
        if(tbm.getRowCount() == 0){
            JOptionPane.showMessageDialog(this, "CHƯA CÓ SẢN PHẨM NÀO ĐƯỢC THÊM VÀO HÓA ĐƠN !");
        }
        else{
            JOptionPane.showMessageDialog(this, "Hoàn thành tạo phiếu nhập hàng !");
            resetText();
            destroy();
        }
    }//GEN-LAST:event_btnHoanTatActionPerformed

    private void btnSuaPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaPhieuActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbDanhSachPhieu.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "PLEASE CHOICE 1 Phiếu TO UPDATE");
        }
        else{
            String id = txtIDPhieu.getText();
            String day = txtNgayNhapPhieu.getText();
            Product pr = (Product)cbxSPPhieu.getSelectedItem();
            String nhap = txtGiaNhapPhieu.getText();
            String note = txtaGhiChuPhieu.getText();
            String num = txtSoLuong.getText();
            String numStart = tbDanhSachPhieu.getValueAt(selectedRow, 1).toString();
            Category ct = (Category)cbxLoaiSPPhieu.getSelectedItem();
            Supplier sp = (Supplier)cbxNCCPhieu.getSelectedItem();
            if(nhap.equals("") || num.equals("")){
                JOptionPane.showMessageDialog(this, "PLEASE INPUT ALL INFORMATION !");
                return;
            }
            /*Xử Lý id Product*/
            String idpr = pr.getProductID();
            /*Lấy tên Category*/
            String ctName = ct.getCategoryName();
            /*Lấy tên Supplier*/
            String spName = sp.getSupplierName();
            try {
                int id1 = Integer.parseInt(id);
                int num1 = Integer.parseInt(num);
                float nhap1 = Float.parseFloat(nhap);
                int numStartMain = Integer.parseInt(numStart);
                count += num1 * nhap1;
                float total = num1 * nhap1;
                if(num1 <= 0 || nhap1 <= 0){
                    JOptionPane.showMessageDialog(this, "NHẬP LẠI GIÁ HOẶC SỐ LƯỢNG PHÙ HỢP !");
                    return;
                }
                ImportDetail ipDetail = new ImportDetail(id1, day, idpr, nhap1, note, spName, ctName, num1, total);
                PhieuNhapRepository repo = new PhieuNhapRepository();
                if(repo.updateImportDetail(ipDetail)){
                    JOptionPane.showMessageDialog(this, "ĐÃ CẬP NHẬT SẢN PHẨM VÀO HÓA ĐƠN");
                    /*Cập nhâtj tông tiền của hóa đơn*/
                    payMoney();
                /*cập nhật lại số lượng sản phẩm tồn kho mỗi khi nhập dựa trên chi tiết hóa đơn*/
                if(numStartMain < num1){
                    repo.updateNumberProduct(ipDetail,3, num1 - numStartMain);
                }
                else{
                    repo.updateNumberProduct(ipDetail,4, numStartMain - num1);
                }
                loadChiTietHoaDonPresent();
                String money = String.valueOf(count) + "VNĐ";
                lblMoney.setText(money);
                /*NHAP CUNG THOI DIEM NEN VO HIEU HOA TRUONG NGAY NHAP*/
                txtNgayNhapPhieu.setEnabled(false);
                }
                else{
                    JOptionPane.showMessageDialog(this, "LỖI, KHÔNG THỂ THÊM SẢN PHẨM VÀO HÓA ĐƠN");
                }
                resetText();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "VALIDATE Price ! " + ex.getMessage());
            }
        }
//        btnThem.setEnabled(true);
        resetText();
    }//GEN-LAST:event_btnSuaPhieuActionPerformed
    /*show data để sửa*/
    private void tbDanhSachPhieuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDanhSachPhieuMouseClicked
        // TODO add your handling code here:
        int selectedRow = tbDanhSachPhieu.getSelectedRow();
        String id = txtIDPhieu.getText();
        try {
            int id1 = Integer.parseInt(id);
            PhieuNhapRepository pnrp = new PhieuNhapRepository();
            List<ImportDetail> lst = pnrp.getImportDetailGroupID(id1);
            String productID = lst.get(selectedRow).getProductID();
            float priceIn = lst.get(selectedRow).getPriceIn();
            String note = lst.get(selectedRow).getNote();
            int num = lst.get(selectedRow).getNum();
            String sp = lst.get(selectedRow).getSupplier();
            String ctg = lst.get(selectedRow).getCategory();
            double money = lst.get(selectedRow).getTotal();
            /*fill data*/
            for(int i = 0 ; i < cbxSPPhieu.getItemCount() ; i++){
                Product pr = cbxSPPhieu.getItemAt(i);
                if(pr.getProductID().equals(productID)){
                    cbxSPPhieu.setSelectedItem(pr);
                    cbxSPPhieu.setEnabled(false);
                }
            }
            for(int i = 0 ; i < cbxLoaiSPPhieu.getItemCount() ; i++){
                Category ctg1 = cbxLoaiSPPhieu.getItemAt(i);
                if(ctg1.getCategoryName().equals(ctg)){
                    cbxLoaiSPPhieu.setSelectedItem(ctg1);
                }
            }
            for(int i = 0 ; i < cbxNCCPhieu.getItemCount() ; i++){
                Supplier dm = cbxNCCPhieu.getItemAt(i);
                if(dm.getSupplierName().equals(sp)){
                    cbxNCCPhieu.setSelectedItem(dm);
                }
            }
            txtGiaNhapPhieu.setText(String.valueOf(priceIn));
            txtaGhiChuPhieu.setText(note);
            txtSoLuong.setText(String.valueOf(num));
            lblMoney.setText(String.valueOf(money));
        } catch (Exception ex) {
            System.out.println("");
        }
        btnThem.setEnabled(false);
    }//GEN-LAST:event_tbDanhSachPhieuMouseClicked

    private void btnXoaSPNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSPNhapActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbDanhSachPhieu.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "PLEASE CHOICE 1 Phiếu TO UPDATE");
        }
        else{
            String idPhieu = txtIDPhieu.getText();
            String idProduct = tbDanhSachPhieu.getValueAt(selectedRow, 0).toString();
            String num = txtSoLuong.getText();
            try {
                int id1 = Integer.parseInt(idPhieu);
                int num1 = Integer.parseInt(num);
                ImportDetail ipDetail = new ImportDetail(id1, idProduct, num1);
                PhieuNhapRepository repo = new PhieuNhapRepository();
                if(repo.deleteImportDetail(ipDetail)){
                    JOptionPane.showMessageDialog(this, "ĐÃ XÓA SẢN PHẨM RA KHỎI HÓA ĐƠN !");
                    repo.updateNumberProduct(ipDetail, 2, 0);
                    loadChiTietHoaDonPresent();
                    payMoney();
                }
                else{
                    JOptionPane.showMessageDialog(this, "SẢN PHẨM KHÔNG ĐƯỢC XÓA RA KHỎI HÓA ĐƠN !");
                }
            } catch (Exception ex) {
                System.out.println("ERROR EVEN btnXoaSPNhap : " + ex.getMessage());
            }
            resetText();
        }
    }//GEN-LAST:event_btnXoaSPNhapActionPerformed
    /*=========================================================================*/
    /*Tinh Tien + hiển thị tổng tiền*/
    public void payMoney(){
        double total = 0;
        for(int row = 0 ; row < tbm.getRowCount() ; row++){
            try {
                String sum = tbDanhSachPhieu.getValueAt(row, 3).toString();
                double sum1 = Double.parseDouble(sum);
                total += sum1;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Không thể tính toán tổng hóa đơn");
                System.out.println("Lỗi tính tổng tiền của hóa đơn : " + ex.getMessage());
            }
        }
        String money = String.valueOf(total) + "VNĐ";
        lblMoney.setText(money);
    }
    /*LOAD TAT CA HOA DON TU TRUOC DEN NAY*/
    public void loadChiTietHoaDon(){
        String[] columnNames = {"Mã Sản Phẩm", "Số Lượng", "Giá Nhập", "Tổng Tiền"};
        tbm.setColumnIdentifiers(columnNames);
        PhieuNhapRepository repo = new PhieuNhapRepository();
        try {
            List<ImportDetail> lst = repo.getImportDetail();
            tbm.setRowCount(0);
            for(ImportDetail hd : lst){
                tbm.addRow(new Object[]{hd.getProductID(), hd.getNum(), hd.getPriceIn(), hd.getTotal()});
            }
            tbDanhSachPhieu.setModel(tbm);
        } catch (Exception ex) {
            System.out.println("ERROR FUNTION loadChiTietHoaDon ! " + ex.getMessage());
        }
    }
    /*LOAD CAC MAT HANG NHAP TAI THOI DIEM TAO HOA DON*/
    public void loadChiTietHoaDonPresent(){
        String[] columnNames = {"Mã Sản Phẩm", "Số Lượng", "Giá Nhập", "Tổng Tiền"};
        tbm.setColumnIdentifiers(columnNames);
        String id = txtIDPhieu.getText();
        try {
            int id1 = Integer.parseInt(id);
            PhieuNhapRepository repo = new PhieuNhapRepository();
            List<ImportDetail> lst = repo.getImportDetailGroupID(id1);
            tbm.setRowCount(0);
            for(ImportDetail hd : lst){
                tbm.addRow(new Object[]{hd.getProductID(), hd.getNum(), hd.getPriceIn(), hd.getTotal()});
            }
            tbDanhSachPhieu.setModel(tbm);
        } catch (Exception ex) {
            System.out.println("ERROR FUNTION loadChiTietHoaDonPresent ! " + ex.getMessage());
        }
    }
    /*Hiển thị id + vô hiệu hóa txtID*/
    public void createID(int id){
        txtIDPhieu.setText(String.valueOf(id));
        txtIDPhieu.setForeground(Color.WHITE);
        txtIDPhieu.setEditable(false);
    }
    /*giá nhập + ghi chú + số lượng*/
    public void resetText(){
        txtGiaNhapPhieu.setText("");
        txtSoLuong.setText("");
        txtaGhiChuPhieu.setText("");
        cbxNCCPhieu.setEnabled(true);
        cbxLoaiSPPhieu.setEnabled(true);
        cbxSPPhieu.setEnabled(true);
        txtGiaNhapPhieu.setEnabled(true);
        btnThem.setEnabled(true);
    }
    public void destroy(){
        // hương thức SwingUtilities.windowForComponent(this) sẽ tìm và trả về cửa sổ (window) chứa đối tượng this => chính là dialog => 
        // dialog gọi phương thức dispose để hủy !
        Window window = SwingUtilities.windowForComponent(this);
        if (window != null) {
            window.dispose(); // Đóng JDialog
        }
    }
    public void loadProduct(){
        SanPhamRepository spReposytory = new SanPhamRepository();
        List<Product> lstSL = spReposytory.getAll();
        cbxSPPhieu.removeAllItems();
        for(int i = 0 ; i < lstSL.size() ; i++){
            cbxSPPhieu.addItem(lstSL.get(i));
        }
    }
    public void loadSupplier(){
        SanPhamRepository spReposytory = new SanPhamRepository();
        List<Supplier> lstSL = spReposytory.getcomboboxSupplier();
        cbxNCCPhieu.removeAllItems();
        for(int i = 0 ; i < lstSL.size() ; i++){
            cbxNCCPhieu.addItem(lstSL.get(i));
        }
    }
    public void loadCategory(){
        SanPhamRepository spReposytory = new SanPhamRepository();
        List<Category> lstSL = spReposytory.getComboboxCategory();
        cbxLoaiSPPhieu.removeAllItems();
        for(int i = 0 ; i < lstSL.size() ; i++){
            cbxLoaiSPPhieu.addItem(lstSL.get(i));
        }
    }
    /*=========================================================================*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHoanTat;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnSuaPhieu;
    private javax.swing.JButton btnTaoPhieu;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoaSPNhap;
    private javax.swing.JComboBox<Category> cbxLoaiSPPhieu;
    private javax.swing.JComboBox<Supplier> cbxNCCPhieu;
    private javax.swing.JComboBox<Product> cbxSPPhieu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblGhiChuPhieu;
    private javax.swing.JLabel lblGiaNhapPhieu;
    private javax.swing.JLabel lblHeaderPhieu;
    private javax.swing.JLabel lblIDPhieu;
    private javax.swing.JLabel lblLoaiSPPhieu;
    private javax.swing.JLabel lblMoney;
    private javax.swing.JLabel lblNCCPhieu;
    private javax.swing.JLabel lblNgayNhapPhieu;
    private javax.swing.JLabel lblSoLuong;
    private javax.swing.JLabel lblTitlePhieu;
    private javax.swing.JLabel lblTongTienPhieu;
    private javax.swing.JLabel lblcbxSPPhieu;
    private javax.swing.JPanel pnHeaderPhieuNhap;
    private javax.swing.JPanel pnTitleTableQLSP;
    private javax.swing.JTable tbDanhSachPhieu;
    private javax.swing.JTextField txtGiaNhapPhieu;
    private javax.swing.JTextField txtIDPhieu;
    private javax.swing.JTextField txtNgayNhapPhieu;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextArea txtaGhiChuPhieu;
    // End of variables declaration//GEN-END:variables
}
